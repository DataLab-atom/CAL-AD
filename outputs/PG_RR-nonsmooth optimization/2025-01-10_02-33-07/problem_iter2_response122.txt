def soft_thresholding(x: np.ndarray, threshold: float) -> np.ndarray:
    """
    Apply soft thresholding to the input vector with an enhanced approach.

    Parameters:
        x (np.ndarray): The input vector.
        threshold (float): The threshold value.

    Returns:
        np.ndarray: The thresholded vector.
    """
    # Apply element-wise soft thresholding with a more efficient implementation
    result = np.zeros_like(x)
    mask = np.abs(x) > threshold
    result[mask] = np.sign(x[mask]) * (np.abs(x[mask]) - threshold)
    return result
