```python
def mutate_v2(individual: Tuple[np.ndarray, int], total_ports: int) -> Tuple[np.ndarray, int]:
    '''
    Mutates an individual by introducing more sophisticated changes to its genes.

    Args:
        individual (Tuple[np.ndarray, int]): Individual to mutate.
        total_ports (int): Total number of ports.

    Returns:
        Tuple[np.ndarray, int]: Mutated individual.
    '''
    pi, probe = individual
    mutation_rate = 0.1
    mutation_strength = 0.05  # Fraction of total_ports to determine the range of mutation

    for i in range(len(pi)):
        if random.random() < mutation_rate:
            # Introduce a small random shift within a range proportional to mutation_strength
            shift = int(mutation_strength * total_ports * (random.random() - 0.5))
            pi[i] = (pi[i] + shift) % total_ports

    if random.random() < mutation_rate:
        # Introduce a small random shift for the probe
        shift = int(mutation_strength * total_ports * (random.random() - 0.5))
        probe = (probe + shift) % total_ports

    # Occasionally swap two elements in pi to introduce more diversity
    if random.random() < mutation_rate:
        idx1, idx2 = random.sample(range(len(pi)), 2)
        pi[idx1], pi[idx2] = pi[idx2], pi[idx1]

    return (pi, probe)
```
