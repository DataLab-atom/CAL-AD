```python
def mutate_v2(individual: Tuple[np.ndarray, int], total_ports: int) -> Tuple[np.ndarray, int]:
    '''
    Mutates an individual by introducing more sophisticated changes to its genes.

    Args:
        individual (Tuple[np.ndarray, int]): Individual to mutate.
        total_ports (int): Total number of ports.

    Returns:
        Tuple[np.ndarray, int]: Mutated individual.
    '''
    pi, probe = individual
    mutation_rate = 0.1
    swap_rate = 0.05
    inversion_rate = 0.05
    
    # Randomly swap two elements in pi
    if random.random() < swap_rate:
        idx1, idx2 = random.sample(range(len(pi)), 2)
        pi[idx1], pi[idx2] = pi[idx2], pi[idx1]
    
    # Randomly invert a segment of pi
    if random.random() < inversion_rate:
        start, end = sorted(random.sample(range(len(pi)), 2))
        pi[start:end] = pi[start:end][::-1]
    
    # Randomly mutate elements in pi
    for i in range(len(pi)):
        if random.random() < mutation_rate:
            pi[i] = random.randint(0, total_ports - 1)
    
    # Randomly mutate the probe
    if random.random() < mutation_rate:
        probe = random.randint(0, total_ports - 1)
    
    return (pi, probe)
```
