```python
def crossover_v2(parent1: np.ndarray, parent2: np.ndarray) -> np.ndarray:
    """
    Perform a modified ordered crossover to create a child route.
    
    Parameters:
    - parent1: np.ndarray, first parent route.
    - parent2: np.ndarray, second parent route.
    
    Returns:
    - np.ndarray, child route.
    """
    size = len(parent1)
    start, end = sorted(np.random.choice(size, 2, replace=False))
    child = np.zeros(size, dtype=int)
    child[start:end] = parent1[start:end]
    
    # Fill the remaining positions with elements from parent2 in the order they appear
    parent2_remaining = [item for item in parent2 if item not in child[start:end]]
    child_index = (end % size)
    for item in parent2_remaining:
        if child[child_index] == 0:
            child[child_index] = item
        child_index = (child_index + 1) % size
    
    return child
```
