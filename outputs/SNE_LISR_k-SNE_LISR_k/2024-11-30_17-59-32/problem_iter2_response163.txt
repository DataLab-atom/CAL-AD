def sherman_morrison(A_inv: np.ndarray, U: np.ndarray, V: np.ndarray, W: np.ndarray) -> np.ndarray:
    """Compute the Sherman-Morrison update with additional robustness checks."""
    temp = W - U.T @ A_inv @ V
    
    # Check for singularity
    if np.linalg.matrix_rank(temp) < U.shape[1]:
        # Attempt to use pseudo-inverse if temp is singular
        try:
            temp_pinv = np.linalg.pinv(temp)
            return A_inv + A_inv @ U @ temp_pinv @ V.T @ A_inv
        except np.linalg.LinAlgError:
            # If pseudo-inverse fails, return the original inverse
            return A_inv
    
    # Apply Sherman-Morrison formula
    return A_inv + A_inv @ U @ np.linalg.inv(temp) @ V.T @ A_inv
