def sherman_morrison(A_inv: np.ndarray, U: np.ndarray, V: np.ndarray, W: np.ndarray) -> np.ndarray:
    """Compute the Sherman-Morrison update with additional robustness and efficiency enhancements."""
    temp = W - U.T @ A_inv @ V
    if np.linalg.matrix_rank(temp) < U.shape[1]:  # Handle singularity
        return A_inv  # Return the original inverse if singular
    
    # Compute the inverse of temp using a more robust method
    temp_inv = np.linalg.pinv(temp)
    
    # Apply the Sherman-Morrison formula with the robust inverse
    return A_inv + A_inv @ U @ temp_inv @ V.T @ A_inv
