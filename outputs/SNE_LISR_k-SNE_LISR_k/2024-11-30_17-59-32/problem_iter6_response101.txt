def greedy_matrix(G: np.ndarray, A: np.ndarray, k: int, alpha: float = 0.9) -> np.ndarray:
    """Select the greedy matrix U based on a weighted combination of diagonal differences and row norms."""
    diff = np.abs(np.diag(G - A))
    row_norms = np.linalg.norm(G - A, axis=1)
    combined_scores = alpha * diff + (1 - alpha) * row_norms  # Weighted combination
    indices = np.argpartition(combined_scores, -k)[-k:]
    U = np.zeros((G.shape[0], k))
    U[indices, np.arange(k)] = 1
    return U
