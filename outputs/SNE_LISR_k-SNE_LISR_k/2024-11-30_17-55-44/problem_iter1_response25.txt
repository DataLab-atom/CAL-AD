```python
def compute_omega_v2(t: int, n: int, r0: float, rho: float, M: float, L: float) -> float:
    """Compute the scaling parameter omega with a different decay strategy."""
    if t % n == 0:
        return (1 + M * np.sqrt(L) * r0 * (rho**(t // n)))**2
    elif t % n == 1:
        return (1 + M * np.sqrt(L) * r0 * (rho**((t // n) - 1)))**2
    return 1.0
```
