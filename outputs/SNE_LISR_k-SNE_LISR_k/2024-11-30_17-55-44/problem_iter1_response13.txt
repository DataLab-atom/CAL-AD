```python
def compute_omega_v2(t: int, n: int, r0: float, rho: float, M: float, L: float, alpha: float = 0.5) -> float:
    """Compute the scaling parameter omega with a more dynamic decay and scaling mechanism."""
    if t % n == 0:
        decay_factor = rho**(t // n)
        scaling_factor = M * np.sqrt(L) * r0
        dynamic_scaling = alpha * (1 - decay_factor) + (1 - alpha) * decay_factor
        return (1 + scaling_factor * dynamic_scaling)**2
    return 1.0
```
