```python
def initialize_pheromones_v2(distance_matrix: np.ndarray, initial_pheromone: float = 1.0, heuristic_weight: float = 0.1) -> np.ndarray:
    """Initialize the pheromone matrix with a heuristic based on distance."""
    num_cities = distance_matrix.shape[0]
    pheromone_matrix = np.full_like(distance_matrix, initial_pheromone, dtype=float)
    
    # Apply a heuristic based on the inverse of the distance
    for i in range(num_cities):
        for j in range(num_cities):
            if i != j:
                pheromone_matrix[i, j] *= (1.0 / (distance_matrix[i, j] + 1e-9)) ** heuristic_weight
    
    return pheromone_matrix
```
